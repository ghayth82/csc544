et.seed(7)#
#
kohmap <- xyf(scale(wines), classvec2classmat(wine.classes),#
              grid = somgrid(5, 5, "hexagonal"), rlen=100)
data(wines)#
set.seed(7)#
#
kohmap <- xyf(scale(wines), classvec2classmat(wine.classes),#
              grid = somgrid(5, 5, "hexagonal"), rlen=100)
plot(kohmap, type="changes", main="plot of changes")
kohmap
plot(kohmap, type="mapping", #
     labels=wine.classes, col=wine.classes,#
     main="mapping plot")
plot(kohmap, type="mapping", #
     pchs=wine.classes, col=wine.classes,#
     main="another mapping plot")
? somgrid
? som
? plot.kohonen
kohmap <- xyf(scale(wines), classvec2classmat(wine.classes),#
              grid = somgrid(5, 5, "rectangular"), rlen=100)
plot(kohmap, type="mapping", #
     labels=wine.classes, col=wine.classes,#
     main="mapping plot")
plot(kohmap, type="mapping", #
     pchs=wine.classes, col=wine.classes,#
     main="another mapping plot")
plot(kohmap, type="prediction",#
     labels=c("Chianti", "Barolo", "Montepulciano"),#
     palette.name = rainbow,#
     main="unit class prediction", cex=.8)
mapping <- predict(kohmap, classif=kohmap$classif)#
hits <- sort(unique(kohmap$classif))#
similarities <- rep(NA, 25)#
for (i in seq(along=hits))#
  similarities[hits[i]] <- mean(mapping$distances[kohmap$classif == hits[i]])
plot(kohmap, type="property", property=similarities, main="property plot")
?size
source("/Users/lutz/Documents/Courses/spring2007/csc581/lecture-notes 581/R perceptron learning/dual-perceptron.r")
run(.1)
help(print)
source("/Users/lutz/Documents/Courses/spring2007/csc581/lecture-notes 581/R perceptron learning/dual-perceptron.r")
run(.1)
source("/Users/lutz/Documents/Courses/spring2007/csc581/lecture-notes 581/R perceptron learning/dual-perceptron.r")
run(.1)
source("/Users/lutz/Documents/Courses/spring2007/csc581/lecture-notes 581/R perceptron learning/dual-perceptron.r")
run(.1)
source("/Users/lutz/Documents/Courses/spring2007/csc581/lecture-notes 581/R perceptron learning/dual-perceptron.r")
run(.1)
source("/Users/lutz/Documents/Courses/spring2007/csc581/lecture-notes 581/R perceptron learning/dual-perceptron.r")
run(.1)
source("/Users/lutz/Documents/Courses/spring2007/csc581/lecture-notes 581/R perceptron learning/dual-perceptron.r")
run(.1)
source("/Users/lutz/Documents/Courses/spring2007/csc581/lecture-notes 581/R perceptron learning/dual-perceptron.r")
run(.1)
source("/Users/lutz/Documents/Courses/spring2007/csc581/lecture-notes 581/R perceptron learning/dual-perceptron.r")
run(.1)
sort
help(sort)
source("/Users/lutz/Documents/Courses/spring2007/csc581/lecture-notes 581/R perceptron learning/dual-perceptron.r")
run(.1)
source("/Users/lutz/Documents/Courses/spring2007/csc581/lecture-notes 581/R perceptron learning/dual-perceptron.r")
run(.1)
clear()
source("/Users/lutz/Documents/Courses/spring2007/csc581/lecture-notes 581/R perceptron learning/perceptron.r")
run(.1)
source("/Users/lutz/Documents/Courses/spring2007/csc581/lecture-notes 581/R perceptron learning/dual-perceptron.r")
run(.1)
libary(quadprog)
library(quadprog)
help(quadprog)
source("/Users/lutz/Documents/Courses/spring2007/csc544/lecture-notes 544/R code/mandelbrot.r")
source("/Users/lutz/Documents/Courses/spring2007/csc544/lecture-notes 544/R code/mandelbrot.r")
source("/Users/lutz/Documents/Courses/spring2007/csc544/lecture-notes 544/R code/mandelbrot.r")
source("/Users/lutz/Documents/Courses/spring2007/csc544/lecture-notes 544/R code/mandelbrot.r")
source("/Users/lutz/Documents/Courses/spring2007/csc544/lecture-notes 544/R code/mandelbrot.r")
